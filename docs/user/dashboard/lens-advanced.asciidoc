[[create-a-dashboard-of-panels-with-ecommerce-data]]
== Disclaimer - shameless copy from the first tutorial! Tutorial: Create a dashboard of panels with time series ecommerce data

You have data coming from tracking your eCommerce, and you want to visualize and analyze the data on a dashboard. To create dashboard panels of the data, open the *Lens* visualization builder, then  
create the visualization panels that best display the data.

[discrete]
[[add-the-data-and-create-the-dashboard]]
=== Add the data and create the dashboard

To create visualizations of the data from the web server, add the data set, then create the dashboard.

. From the {kib} *Home* page, click *Try our sample data*.

. From *Sample eCommerce orders*, click *Add data*.

. Open the main menu, click *Dashboard*.

. Click *Create dashboard*.

[float]
[[open-and-set-up-lens]]
=== Open and set up Lens

With *Lens*, you identify the data fields you want to visualize, drag and drop the fields, then watch as *Lens* uses heuristics to apply the fields and create a visualization for you.

. From the dashboard, click *Create panel*.

. On the *New visualization* window, click *Lens*.
+
[role="screenshot"]
image::images/lens_end_to_end_1_1.png[New visualization popover]

. Make sure the *kibana_sample_data_ecommerce_* index appears.
+
The list of fields are dependent on the <<index-patterns,index pattern>>, <<set-time-filter,time filter>>, and field filters. 

[discrete]
[[view-the-number-of-transactions-per-day]]
=== View the number of transactions per day

To determine how many orders are made during the day, create a bar chart, then add it to the dashboard.

. Set the <<set-time-filter,time filter>> to *Last 30 days*.

. From the *Available fields* list, drag and drop *Records* to the visualization builder.
+
[role="screenshot"]
image::images/lens_advanced_1_1.png[Added records to the workspace]

. Now let's get the pace of orders per day. From the editor, click *Count of Records*.

.. In the *Display name* field, enter `Number of orders`.

.. Click on *Add advanced options* and *Normalize by unit*.

.. From the select list, choose `per day`.

.. Click *Close*.

. Hide the label of the bottom axis as it doesn't provide any useful information. 

.. From the *Bottom Axis* popover on the top of the chart, unselect *Show* setting.
+
[role="screenshot"]
image::images/lens_advanced_1_2.png[Orders per day]

. *Save* the panel, enter `Orders per day` in the *Title* field, then add the panel to the dashboard.

[discrete]
[[view-the-cumulative-number-of-products-sold-over-time]]
=== View the cumulative number of products sold during weekends

. Open *Lens*, then set the <<set-time-filter,time filter>> to *Last 30 days*.

. From the new layer editor, click the *Chart type* dropdown, then click the line chart.

. Configure cumulative sum of orders.

.. From the *Available fields* list, drag and drop *Records* to the visualization builder.

.. Click on the *Count of Records* in the *Vertical Axis*.

.. From *Select a function*, click *Cumulative sum*.

.. Change the Display name to `Cumulative orders during weekend days`.

.. Click *Close*.

. From the editor, click the *Drop a field or click to add* field for *Break down by*. 

. From *Select a function*, click *Filters* to filter the data by weekend days.

.. Click *All records*.

.. In the *KQL* field, enter `day_of_week : "Saturday" or day_of_week : "Sunday"`. 
+
[role="screenshot"]
image::images/lens_advanced_2_1.png[Filter aggregation to filter weekend days]

. Hide the legend by choosing `Hide` in the settings on the top of the chart.

+
[role="screenshot"]
image::images/lens_advanced_2_2.png[Line chart with cumulative sum of orders made on the weekend]


. *Save* the panel, enter `Cumulative sum of products sold over weekend` in the *Title* field, then add the panel to the dashboard.

[discrete]
[[add-a-data-layer]]
=== View the key percentiles of prices of products over time

To view the distribution of the prices of products that are being sold, create a percentile chart.

. Open *Lens*.

. From the new layer editor, click the *Chart type* dropdown, then click the area chart.

. From the *Available fields* list, drag and drop *products.price* to *Vertical axis* in the editor.

.. Click *Median of products.price*.

.. From *Select a function*, click *Percentile*.

.. Change the display name to *95th*

.. Copy the percentile metric by dragging it to *Drop a field or click to add*.

+
[role="screenshot"]
image::images/lens_advanced_3_1.gif[Easily duplicate the items with drag and drop]

.. Click on the newly created item to open a configuration panel and type `90` in the *percentile* setting.

.. Change the display name to *90th*

.. Repeat copying and modifying the item for remaining percentiles: `50` and `10`.

. For the left axis, change the name to *Percentiles for product prices*

+
[role="screenshot"]
image::images/lens_advanced_3_3.png[Percentiles for product prices chart]

. *Save* the panel, enter `Percentiles for product prices` in the *Title* field, then add the panel to the dashboard.

[discrete]
[[add-the-response-code-filters]]
=== View the moving average of prices of clothing, shoes and accessories.

This data can be helpful to analyze prices in each category of the offered products.

. Open *Lens*.

. From the new layer editor, click the *Chart type* dropdown, then click the line chart.

.. From the *Available fields* list, drag and drop *products.price* to the visualization builder.

. From the editor, click the *Drop a field or click to add* field for *Break down by*. 

.. From *Select a function*, click *Filters*.

.. Click *All records*.

.. In the *KQL* field, enter `category.keyword : *Shoes*`. 

.. In the *Label* field, enter `Shoes`, then press Return.

.. Click *Add a filter*.

.. In the *KQL* field, enter `category.keyword : *Accessories*`. 

.. In the *Label* field, enter `Accessories`, then press Return.

. Add the filter for the server error codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `category.keyword : *Clothing*`. 

.. In the *Label* field, enter `Clothing`, then press Return.

. Click on *Close*

[role="screenshot"]
image::images/lens_advanced_4_1.png[Median prices chart for different categories]

To focus more on the general trends and not get distracted by the peaks in the data, smooth the chart by applying moving average on top of the metric.

. From the editor, click the *Median of products.price*.

. From *Select a function*, click *Moving average*.

. Change the *window* to 7.

. Click on *Close*

. *Save* the panel, enter `Moving average of prices by categories` in the *Title* field, then add the panel to the dashboard.

[role="screenshot"]
image::images/lens_advanced_4_2.png[Moving average prices chart for different categories]

===Result

[role="screenshot"]
image::images/lens_advanced_result.png[Dashboard view]